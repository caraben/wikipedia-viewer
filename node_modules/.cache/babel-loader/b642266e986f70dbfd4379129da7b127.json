{"ast":null,"code":"import _classCallCheck from \"/home/balazs/Desktop/coding/react/cv_projects/wikipedia-viewer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/balazs/Desktop/coding/react/cv_projects/wikipedia-viewer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/balazs/Desktop/coding/react/cv_projects/wikipedia-viewer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/balazs/Desktop/coding/react/cv_projects/wikipedia-viewer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/balazs/Desktop/coding/react/cv_projects/wikipedia-viewer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/balazs/Desktop/coding/react/cv_projects/wikipedia-viewer/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getBackground = function () {\n      // geting canvas by id c\n      var c = document.getElementById(\"c\");\n      var ctx = c.getContext(\"2d\"); //making the canvas full screen\n\n      c.height = window.innerHeight;\n      c.width = window.innerWidth; //chinese characters - taken from the unicode charset\n\n      var matrix = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789@#$%^&*()*&^%\"; //converting the string into an array of single characters\n\n      matrix = matrix.split(\"\");\n      var font_size = 10;\n      var columns = c.width / font_size; //number of columns for the rain\n      //an array of drops - one per column\n\n      var drops = []; //x below is the x coordinate\n      //1 = y co-ordinate of the drop(same for every drop initially)\n\n      for (var x = 0; x < columns; x++) {\n        drops[x] = 1;\n      } //drawing the characters\n\n\n      function draw() {\n        //Black BG for the canvas\n        //translucent BG to show trail\n        ctx.fillStyle = \"rgba(0, 0, 0, 0.04)\";\n        ctx.fillRect(0, 0, c.width, c.height);\n        ctx.fillStyle = \"#0F0\"; //green text\n\n        ctx.font = font_size + \"px arial\"; //looping over drops\n\n        for (var i = 0; i < drops.length; i++) {\n          //a random chinese character to print\n          var text = matrix[Math.floor(Math.random() * matrix.length)]; //x = i*font_size, y = value of drops[i]*font_size\n\n          ctx.fillText(text, i * font_size, drops[i] * font_size); //sending the drop back to the top randomly after it has crossed the screen\n          //adding a randomness to the reset to make the drops scattered on the Y axis\n\n          if (drops[i] * font_size > c.height && Math.random() > 0.975) drops[i] = 0; //incrementing Y coordinate\n\n          drops[i]++;\n        }\n      }\n\n      setInterval(draw, 35);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"wikipedia\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Wikipedia viewer\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Search for:\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        id: \"c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/balazs/Desktop/coding/react/cv_projects/wikipedia-viewer/src/App.js"],"names":["React","Component","App","getBackground","c","document","getElementById","ctx","getContext","height","window","innerHeight","width","innerWidth","matrix","split","font_size","columns","drops","x","draw","fillStyle","fillRect","font","i","length","text","Math","floor","random","fillText","setInterval"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;;;;;;UACJC,a,GAAgB,YAAM;AACpB;AACA,UAAIC,CAAC,GAAGC,QAAQ,CAACC,cAAT,CAAwB,GAAxB,CAAR;AACA,UAAIC,GAAG,GAAGH,CAAC,CAACI,UAAF,CAAa,IAAb,CAAV,CAHoB,CAKpB;;AACAJ,MAAAA,CAAC,CAACK,MAAF,GAAWC,MAAM,CAACC,WAAlB;AACAP,MAAAA,CAAC,CAACQ,KAAF,GAAUF,MAAM,CAACG,UAAjB,CAPoB,CASpB;;AACA,UAAIC,MAAM,GAAG,kDAAb,CAVoB,CAWpB;;AACAA,MAAAA,MAAM,GAAGA,MAAM,CAACC,KAAP,CAAa,EAAb,CAAT;AAEA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,OAAO,GAAGb,CAAC,CAACQ,KAAF,GAAUI,SAAxB,CAfoB,CAee;AACnC;;AACA,UAAIE,KAAK,GAAG,EAAZ,CAjBoB,CAkBpB;AACA;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAApB,EAA6BE,CAAC,EAA9B;AAAkCD,QAAAA,KAAK,CAACC,CAAD,CAAL,GAAW,CAAX;AAAlC,OApBoB,CAsBpB;;;AACA,eAASC,IAAT,GAAgB;AACd;AACA;AACAb,QAAAA,GAAG,CAACc,SAAJ,GAAgB,qBAAhB;AACAd,QAAAA,GAAG,CAACe,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBlB,CAAC,CAACQ,KAArB,EAA4BR,CAAC,CAACK,MAA9B;AAEAF,QAAAA,GAAG,CAACc,SAAJ,GAAgB,MAAhB,CANc,CAMU;;AACxBd,QAAAA,GAAG,CAACgB,IAAJ,GAAWP,SAAS,GAAG,UAAvB,CAPc,CAQd;;AACA,aAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACO,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC;AACA,cAAIE,IAAI,GAAGZ,MAAM,CAACa,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBf,MAAM,CAACW,MAAlC,CAAD,CAAjB,CAFqC,CAGrC;;AACAlB,UAAAA,GAAG,CAACuB,QAAJ,CAAaJ,IAAb,EAAmBF,CAAC,GAAGR,SAAvB,EAAkCE,KAAK,CAACM,CAAD,CAAL,GAAWR,SAA7C,EAJqC,CAMrC;AACA;;AACA,cAAIE,KAAK,CAACM,CAAD,CAAL,GAAWR,SAAX,GAAuBZ,CAAC,CAACK,MAAzB,IAAmCkB,IAAI,CAACE,MAAL,KAAgB,KAAvD,EACEX,KAAK,CAACM,CAAD,CAAL,GAAW,CAAX,CATmC,CAWrC;;AACAN,UAAAA,KAAK,CAACM,CAAD,CAAL;AACD;AACF;;AAEDO,MAAAA,WAAW,CAACX,IAAD,EAAO,EAAP,CAAX;AACD,K;;;;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAKE;AAAQ,QAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AASD;;;;EA9DenB,S;;AAiElB,eAAeC,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  getBackground = () => {\n    // geting canvas by id c\n    var c = document.getElementById(\"c\");\n    var ctx = c.getContext(\"2d\");\n\n    //making the canvas full screen\n    c.height = window.innerHeight;\n    c.width = window.innerWidth;\n\n    //chinese characters - taken from the unicode charset\n    var matrix = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789@#$%^&*()*&^%\";\n    //converting the string into an array of single characters\n    matrix = matrix.split(\"\");\n\n    var font_size = 10;\n    var columns = c.width / font_size; //number of columns for the rain\n    //an array of drops - one per column\n    var drops = [];\n    //x below is the x coordinate\n    //1 = y co-ordinate of the drop(same for every drop initially)\n    for (var x = 0; x < columns; x++) drops[x] = 1;\n\n    //drawing the characters\n    function draw() {\n      //Black BG for the canvas\n      //translucent BG to show trail\n      ctx.fillStyle = \"rgba(0, 0, 0, 0.04)\";\n      ctx.fillRect(0, 0, c.width, c.height);\n\n      ctx.fillStyle = \"#0F0\"; //green text\n      ctx.font = font_size + \"px arial\";\n      //looping over drops\n      for (var i = 0; i < drops.length; i++) {\n        //a random chinese character to print\n        var text = matrix[Math.floor(Math.random() * matrix.length)];\n        //x = i*font_size, y = value of drops[i]*font_size\n        ctx.fillText(text, i * font_size, drops[i] * font_size);\n\n        //sending the drop back to the top randomly after it has crossed the screen\n        //adding a randomness to the reset to make the drops scattered on the Y axis\n        if (drops[i] * font_size > c.height && Math.random() > 0.975)\n          drops[i] = 0;\n\n        //incrementing Y coordinate\n        drops[i]++;\n      }\n    }\n\n    setInterval(draw, 35);\n  };\n\n  render() {\n    return (\n      <div className=\"wikipedia\">\n        <h1>Wikipedia viewer</h1>\n        <p>Search for:</p>\n        <input type=\"text\" placeholder=\"Search\" />\n\n        <canvas id=\"c\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}